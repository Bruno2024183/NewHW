{"ast":null,"code":"var _jsxFileName = \"/Users/luistejada/Downloads/React/Day2/Exercise2/src/Events.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Events = () => {\n  _s();\n  // Parte I: Función clickMe\n  const clickMe = () => {\n    alert('I was clicked');\n  };\n\n  // Parte II: Función handleKeyDown\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      alert(`The Enter key was pressed, your input is: ${event.target.value}`);\n    }\n  };\n\n  // Parte III: Hook de estado para toggle\n  const [isToggleOn, setIsToggleOn] = useState(true);\n  const toggleButton = () => {\n    setIsToggleOn(!isToggleOn);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickMe,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Press the ENTER key!\",\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Exercise 9:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleButton,\n      children: isToggleOn ? 'ON' : 'OFF'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Events, \"PV2Uh5CURwWPMr60xKKAlEtRrbo=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Events","_s","clickMe","alert","handleKeyDown","event","key","target","value","isToggleOn","setIsToggleOn","toggleButton","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/luistejada/Downloads/React/Day2/Exercise2/src/Events.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Events = () => {\n  // Parte I: Función clickMe\n  const clickMe = () => {\n    alert('I was clicked');\n  };\n\n  // Parte II: Función handleKeyDown\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      alert(`The Enter key was pressed, your input is: ${event.target.value}`);\n    }\n  };\n\n  // Parte III: Hook de estado para toggle\n  const [isToggleOn, setIsToggleOn] = useState(true);\n\n  const toggleButton = () => {\n    setIsToggleOn(!isToggleOn);\n  };\n\n  return (\n    <div>\n      {/* Parte I: Botón con evento onClick */}\n      <button onClick={clickMe}>Click Me</button>\n\n      {/* Parte II: Input con evento onKeyDown */}\n      <br />\n      <input type=\"text\" placeholder=\"Press the ENTER key!\" onKeyDown={handleKeyDown} />\n\n      {/* Parte III: Botón con toggle de estado */}\n      <br />\n      <h3>Exercise 9:</h3>\n      <button onClick={toggleButton}>\n        {isToggleOn ? 'ON' : 'OFF'}\n      </button>\n    </div>\n  );\n};\n\nexport default Events;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBC,KAAK,CAAC,eAAe,CAAC;EACxB,CAAC;;EAED;EACA,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/B,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACzBH,KAAK,CAAC,6CAA6CE,KAAK,CAACE,MAAM,CAACC,KAAK,EAAE,CAAC;IAC1E;EACF,CAAC;;EAED;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEV,OAAA;IAAAa,QAAA,gBAEEb,OAAA;MAAQc,OAAO,EAAEX,OAAQ;MAAAU,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAG3ClB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNlB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,sBAAsB;MAACC,SAAS,EAAEhB;IAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGlFlB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNlB,OAAA;MAAAa,QAAA,EAAI;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBlB,OAAA;MAAQc,OAAO,EAAEF,YAAa;MAAAC,QAAA,EAC3BH,UAAU,GAAG,IAAI,GAAG;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAChB,EAAA,CArCID,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AAuCZ,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}