{"ast":null,"code":"var _jsxFileName = \"/Users/luistejada/Downloads/React/Day3/miniproject/src/columns/ColumnRight.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColumnRight = () => {\n  _s();\n  const [text, setText] = useState('{\"function\":\"I live to crash\"}');\n  const replaceStringWithObject = () => {\n    // Intentar renderizar un objeto causará un error, pero lo manejamos dentro del ErrorBoundary\n    try {\n      setText(JSON.parse(text)); // Esto convierte la cadena JSON a un objeto\n    } catch (error) {\n      console.error(\"Error parsing JSON:\", error);\n      throw new Error('Error parsing JSON');\n    }\n  };\n  const invokeEventHandler = () => {\n    throw new Error('An error occurred in the event handler');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Right column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are two types of errors we can trigger inside this component: A rendering error and a regular javascript error.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: replaceStringWithObject,\n      children: \"Replace string with object\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: typeof text === 'string' ? text : JSON.stringify(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: invokeEventHandler,\n      children: \"Invoke event handler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ColumnRight, \"tvygayF2t6WmdhMFtVSuGZ6K+4I=\");\n_c = ColumnRight;\nexport default ColumnRight;\nvar _c;\n$RefreshReg$(_c, \"ColumnRight\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ColumnRight","_s","text","setText","replaceStringWithObject","JSON","parse","error","console","Error","invokeEventHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","stringify","_c","$RefreshReg$"],"sources":["/Users/luistejada/Downloads/React/Day3/miniproject/src/columns/ColumnRight.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ColumnRight = () => {\n  const [text, setText] = useState('{\"function\":\"I live to crash\"}');\n\n  const replaceStringWithObject = () => {\n    // Intentar renderizar un objeto causará un error, pero lo manejamos dentro del ErrorBoundary\n    try {\n      setText(JSON.parse(text)); // Esto convierte la cadena JSON a un objeto\n    } catch (error) {\n      console.error(\"Error parsing JSON:\", error);\n      throw new Error('Error parsing JSON');\n    }\n  };\n\n  const invokeEventHandler = () => {\n    throw new Error('An error occurred in the event handler');\n  };\n\n  return (\n    <div>\n      <h2>Right column</h2>\n      <p>\n        There are two types of errors we can trigger inside this component: A rendering error and a regular javascript error.\n      </p>\n      <button className=\"btn btn-danger\" onClick={replaceStringWithObject}>\n        Replace string with object\n      </button>\n      <p>{typeof text === 'string' ? text : JSON.stringify(text)}</p>\n      <button className=\"btn btn-danger\" onClick={invokeEventHandler}>\n        Invoke event handler\n      </button>\n    </div>\n  );\n};\n\nexport default ColumnRight;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,gCAAgC,CAAC;EAElE,MAAMO,uBAAuB,GAAGA,CAAA,KAAM;IACpC;IACA,IAAI;MACFD,OAAO,CAACE,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAM,IAAIE,KAAK,CAAC,oBAAoB,CAAC;IACvC;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAM,IAAID,KAAK,CAAC,wCAAwC,CAAC;EAC3D,CAAC;EAED,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBhB,OAAA;MAAAY,QAAA,EAAG;IAEH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJhB,OAAA;MAAQiB,SAAS,EAAC,gBAAgB;MAACC,OAAO,EAAEb,uBAAwB;MAAAO,QAAA,EAAC;IAErE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACThB,OAAA;MAAAY,QAAA,EAAI,OAAOT,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGG,IAAI,CAACa,SAAS,CAAChB,IAAI;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/DhB,OAAA;MAAQiB,SAAS,EAAC,gBAAgB;MAACC,OAAO,EAAEP,kBAAmB;MAAAC,QAAA,EAAC;IAEhE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACd,EAAA,CAhCID,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}