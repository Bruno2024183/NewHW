{"ast":null,"code":"var _jsxFileName = \"/Users/luistejada/Downloads/React/Day3/Exercise2/src/Color.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Color extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favoriteColor: 'red'\n    };\n  }\n\n  // Parte I: shouldComponentUpdate\n  shouldComponentUpdate() {\n    return true; // Cambia a false para prevenir la actualización del color.\n  }\n\n  // Parte II: componentDidUpdate\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.favoriteColor !== this.state.favoriteColor) {\n      console.log(\"after update\");\n    }\n  }\n\n  // Parte III: getSnapshotBeforeUpdate\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log(\"in getSnapshotBeforeUpdate\");\n    return null;\n  }\n\n  // Cambiar el color después de 2 segundos\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        favoriteColor: 'yellow'\n      });\n    }, 2000);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"My Favorite Color is \", this.state.favoriteColor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Color;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Color","constructor","props","state","favoriteColor","shouldComponentUpdate","componentDidUpdate","prevProps","prevState","console","log","getSnapshotBeforeUpdate","componentDidMount","setTimeout","setState","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/luistejada/Downloads/React/Day3/Exercise2/src/Color.js"],"sourcesContent":["import React, { Component } from 'react';\n\nclass Color extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favoriteColor: 'red',\n    };\n  }\n\n  // Parte I: shouldComponentUpdate\n  shouldComponentUpdate() {\n    return true; // Cambia a false para prevenir la actualización del color.\n  }\n\n  // Parte II: componentDidUpdate\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.favoriteColor !== this.state.favoriteColor) {\n      console.log(\"after update\");\n    }\n  }\n\n  // Parte III: getSnapshotBeforeUpdate\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log(\"in getSnapshotBeforeUpdate\");\n    return null;\n  }\n\n  // Cambiar el color después de 2 segundos\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ favoriteColor: 'yellow' });\n    }, 2000);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>My Favorite Color is {this.state.favoriteColor}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Color;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,KAAK,SAASH,SAAS,CAAC;EAC5BI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,aAAa,EAAE;IACjB,CAAC;EACH;;EAEA;EACAC,qBAAqBA,CAAA,EAAG;IACtB,OAAO,IAAI,CAAC,CAAC;EACf;;EAEA;EACAC,kBAAkBA,CAACC,SAAS,EAAEC,SAAS,EAAE;IACvC,IAAIA,SAAS,CAACJ,aAAa,KAAK,IAAI,CAACD,KAAK,CAACC,aAAa,EAAE;MACxDK,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC7B;EACF;;EAEA;EACAC,uBAAuBA,CAACJ,SAAS,EAAEC,SAAS,EAAE;IAC5CC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzC,OAAO,IAAI;EACb;;EAEA;EACAE,iBAAiBA,CAAA,EAAG;IAClBC,UAAU,CAAC,MAAM;MACf,IAAI,CAACC,QAAQ,CAAC;QAAEV,aAAa,EAAE;MAAS,CAAC,CAAC;IAC5C,CAAC,EAAE,IAAI,CAAC;EACV;EAEAW,MAAMA,CAAA,EAAG;IACP,oBACEhB,OAAA;MAAAiB,QAAA,eACEjB,OAAA;QAAAiB,QAAA,GAAI,uBAAqB,EAAC,IAAI,CAACb,KAAK,CAACC,aAAa;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAEV;AACF;AAEA,eAAepB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}