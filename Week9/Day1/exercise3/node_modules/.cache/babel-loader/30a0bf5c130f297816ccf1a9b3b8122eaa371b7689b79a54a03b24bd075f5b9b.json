{"ast":null,"code":"var _jsxFileName = \"/Users/luistejada/Downloads/redux/Day1/exercise3/src/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useState } from \"react\";\n\n// Reducer function to handle the actions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      // Add a new todo to the state\n      return [...state, {\n        id: Date.now(),\n        text: action.text\n      }];\n    case \"REMOVE_TODO\":\n      // Remove a todo by filtering it out by its id\n      return state.filter(todo => todo.id !== action.id);\n    default:\n      return state;\n  }\n}\nfunction TodoList() {\n  _s();\n  // useReducer hook to manage the state of todos\n  const [todos, dispatch] = useReducer(todoReducer, []);\n\n  // State to handle the input value of the new todo\n  const [todoText, setTodoText] = useState(\"\");\n\n  // Function to add a new todo\n  const handleAddTodo = () => {\n    if (todoText.trim() === \"\") return; // Ignore empty input\n    dispatch({\n      type: \"ADD_TODO\",\n      text: todoText\n    });\n    setTodoText(\"\"); // Clear the input field after adding\n  };\n\n  // Function to remove a todo by its id\n  const handleRemoveTodo = id => {\n    dispatch({\n      type: \"REMOVE_TODO\",\n      id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new todo\",\n      value: todoText,\n      onChange: e => setTodoText(e.target.value) // Update input field as user types\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.text, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveTodo(todo.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"pA+i+/xldap9qfp8IEgqfZDTsh4=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useReducer","useState","jsxDEV","_jsxDEV","todoReducer","state","action","type","id","Date","now","text","filter","todo","TodoList","_s","todos","dispatch","todoText","setTodoText","handleAddTodo","trim","handleRemoveTodo","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["/Users/luistejada/Downloads/redux/Day1/exercise3/src/TodoList.js"],"sourcesContent":["import React, { useReducer, useState } from \"react\";\n\n// Reducer function to handle the actions\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      // Add a new todo to the state\n      return [...state, { id: Date.now(), text: action.text }];\n    case \"REMOVE_TODO\":\n      // Remove a todo by filtering it out by its id\n      return state.filter((todo) => todo.id !== action.id);\n    default:\n      return state;\n  }\n}\n\nfunction TodoList() {\n  // useReducer hook to manage the state of todos\n  const [todos, dispatch] = useReducer(todoReducer, []);\n  \n  // State to handle the input value of the new todo\n  const [todoText, setTodoText] = useState(\"\");\n\n  // Function to add a new todo\n  const handleAddTodo = () => {\n    if (todoText.trim() === \"\") return; // Ignore empty input\n    dispatch({ type: \"ADD_TODO\", text: todoText });\n    setTodoText(\"\"); // Clear the input field after adding\n  };\n\n  // Function to remove a todo by its id\n  const handleRemoveTodo = (id) => {\n    dispatch({ type: \"REMOVE_TODO\", id });\n  };\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Add a new todo\"\n        value={todoText}\n        onChange={(e) => setTodoText(e.target.value)} // Update input field as user types\n      />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      \n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>\n            {todo.text}{\" \"}\n            <button onClick={() => handleRemoveTodo(todo.id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAClC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb;MACA,OAAO,CAAC,GAAGF,KAAK,EAAE;QAAEG,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEC,IAAI,EAAEL,MAAM,CAACK;MAAK,CAAC,CAAC;IAC1D,KAAK,aAAa;MAChB;MACA,OAAON,KAAK,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKF,MAAM,CAACE,EAAE,CAAC;IACtD;MACE,OAAOH,KAAK;EAChB;AACF;AAEA,SAASS,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,UAAU,CAACI,WAAW,EAAE,EAAE,CAAC;;EAErD;EACA,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMmB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIF,QAAQ,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC;IACpCJ,QAAQ,CAAC;MAAEV,IAAI,EAAE,UAAU;MAAEI,IAAI,EAAEO;IAAS,CAAC,CAAC;IAC9CC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;EACnB,CAAC;;EAED;EACA,MAAMG,gBAAgB,GAAId,EAAE,IAAK;IAC/BS,QAAQ,CAAC;MAAEV,IAAI,EAAE,aAAa;MAAEC;IAAG,CAAC,CAAC;EACvC,CAAC;EAED,oBACEL,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxB,OAAA;MACEI,IAAI,EAAC,MAAM;MACXqB,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAEX,QAAS;MAChBY,QAAQ,EAAGC,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFxB,OAAA;MAAQ8B,OAAO,EAAEb,aAAc;MAAAG,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEjDxB,OAAA;MAAAoB,QAAA,EACGP,KAAK,CAACkB,GAAG,CAAErB,IAAI,iBACdV,OAAA;QAAAoB,QAAA,GACGV,IAAI,CAACF,IAAI,EAAE,GAAG,eACfR,OAAA;UAAQ8B,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACT,IAAI,CAACL,EAAE,CAAE;UAAAe,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF1Dd,IAAI,CAACL,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACZ,EAAA,CAxCQD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA0CjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}